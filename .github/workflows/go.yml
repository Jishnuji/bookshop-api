
name: Go CI

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master, develop ]
  workflow_dispatch: # Allows run workflow manually

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: bookshop_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.25'

    - name: Debug Go version and environment
      run: |
        echo "=== Go version info ==="
        go version
        which go
        go env GOROOT
        go env GOPATH
        go env GOOS
        go env GOARCH
        echo "=== Check go.mod ==="
        head -5 go.mod
        echo "=== PATH info ==="
        echo $PATH


    - name: Cache Go modules
      uses: actions/cache@v3
      with:
        path: |
          ~/.cache/go-build
          ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-

    - name: Download dependencies
      run: go mod download

    - name: Verify dependencies
      run: go mod verify

    - name: Run go generate
      run: go generate ./...

    - name: Build
      run: go build -race -o app cmd/main.go

    - name: Run tests
      env:
        DSN: "postgres://postgres:postgres@localhost:5432/bookshop_test?sslmode=disable"
        DEBUG_ERRORS: "1"
        MIGRATIONS_PATH: "file://./internal/app/migrations"
      run: |
        go test -race ./internal/app/services
        go test -race ./internal/app/domain  
        go test -race ./internal/app/transport/httpserver/httpserver_test

    - name: Install golangci-lint from source
      run: |
        git clone https://github.com/golangci/golangci-lint.git /tmp/golangci-lint
        cd /tmp/golangci-lint
        git checkout master  # Используем самую свежую версию
        go install -ldflags "-X main.version=$(git describe --tags --always --dirty) -X main.commit=$(git rev-parse --short HEAD) -X main.date=$(date -u '+%Y-%m-%dT%H:%M:%SZ')" ./cmd/golangci-lint

    - name: Run golangci-lint
      run: golangci-lint run --timeout=10m ./...

  build:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.25'

    - name: Build for multiple platforms
      run: |
        GOOS=linux GOARCH=amd64 go build -race -o app-linux-amd64 cmd/main.go
        GOOS=windows GOARCH=amd64 go build -race -o app-windows-amd64.exe cmd/main.go
        GOOS=darwin GOARCH=amd64 go build -race -o app-darwin-amd64 cmd/main.go

    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: binaries
        path: |
          app-linux-amd64
          app-windows-amd64.exe
          app-darwin-amd64
