syntax = "proto3";

package v1;

option go_package = "proto/v1/book; bookv1";

import "google/api/annotations.proto";

message BookData {
  string title = 1;
  int32 year = 2;
  string author = 3;
  int32 price = 4;
  int32 stock = 5;
  int32 category_id = 6;
}

message CreateBookRequest {
  BookData book = 1;
}

message CreateBookResponse {
  int64 id = 1;
  BookData book = 2;
}

message GetBookRequest {
  int64 id = 1;
}

message GetBookResponse {
  int64 id = 1;
  BookData book = 2;
}

message UpdateBookRequest {
  int64 id = 1;
  BookData book = 2;
}

message UpdateBookResponse {
  int64 id = 1;
  BookData book = 2;
}

message DeleteBookRequest {
  int64 id = 1;
}

message DeleteBookResponse {
  bool success = 1;
}

message ListBooksRequest {
  repeated int32 category_id = 1;
  int32 page = 2;
}

message ListBooksResponse {
  repeated CreateBookResponse books = 1;
}

service BookService {
  rpc CreateBook (CreateBookRequest) returns (CreateBookResponse) {
    option (google.api.http) = {
      post: "/v1/book"
      body: "*"
    };
  };
  rpc GetBook (GetBookRequest) returns (GetBookResponse) {
    option (google.api.http) = {
      get: "/v1/book/{id}"
    };
  };
  rpc UpdateBook (UpdateBookRequest) returns (UpdateBookResponse) {
    option (google.api.http) = {
      patch: "/v1/book/{id}"
      body: "*"
    };
  };
  rpc DeleteBook (DeleteBookRequest) returns (DeleteBookResponse) {
    option (google.api.http) = {
      delete: "/v1/book/{id}"
    };$ go env GOTMPDIR


        XPS@E-UDIN MINGW64 ~/GolandProjects/toptal (master)
  };
  rpc ListBooks (ListBooksRequest) returns (ListBooksResponse) {
    option (google.api.http) = {
      get: "/v1/books"
    };
  };
}